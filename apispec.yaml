openapi: 3.0.3
info:
  title: CRUD-API
  description: CRUD-API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The user was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: List all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{id}:
    get:
      summary: Find user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The user was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '204':
          description: The user was deleted
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string